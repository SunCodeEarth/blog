<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Blogging on Earth</title>
    <link>https://suncodeearth.github.io/blog/categories/python/</link>
    <description>Recent content in Python on Blogging on Earth</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>sunsp.gis@gmail.com (Shipeng Sun)</managingEditor>
    <webMaster>sunsp.gis@gmail.com (Shipeng Sun)</webMaster>
    <lastBuildDate>Thu, 10 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://suncodeearth.github.io/blog/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Computation on Windows Arm64 Computers</title>
      <link>https://suncodeearth.github.io/blog/post/2025-04-10-computation-on-windows-arm64-computers/</link>
      <pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate>
      <author>sunsp.gis@gmail.com (Shipeng Sun)</author>
      <guid>https://suncodeearth.github.io/blog/post/2025-04-10-computation-on-windows-arm64-computers/</guid>
      <description>Windows have been releasing more Arm64 based laptops and tablets. However, it is still quite inconvenient to set those computers for scientific computation in Python, R, etc. Overall, it is not recommended to use an arm64 Windows computers for data science works. Here are a few possible solutions.
General Solution In general, we can use it as a Linux computer with WSL2. However, not all computational platforms/environments are available on Linux such as Ubuntu.</description>
    </item>
    
    <item>
      <title>Speeding up Python</title>
      <link>https://suncodeearth.github.io/blog/post/2024-06-15-speeding-up-python/</link>
      <pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate>
      <author>sunsp.gis@gmail.com (Shipeng Sun)</author>
      <guid>https://suncodeearth.github.io/blog/post/2024-06-15-speeding-up-python/</guid>
      <description>Python, as an interpreted scripting language, is not characterized by speed or executive efficiency. A lot of utility tools like the package management tools, when written in Python, is not fast. Many tools have been rewritten using C/C++. Here are a few clues in terms of getting Python faster in many different aspects. This will be an on-going effort and updates will be published when there is new information.</description>
    </item>
    
    <item>
      <title>Use census API in R and Python</title>
      <link>https://suncodeearth.github.io/blog/post/2024-06-13-use-census-api-in-r-and-python/</link>
      <pubDate>Thu, 13 Jun 2024 00:00:00 +0000</pubDate>
      <author>sunsp.gis@gmail.com (Shipeng Sun)</author>
      <guid>https://suncodeearth.github.io/blog/post/2024-06-13-use-census-api-in-r-and-python/</guid>
      <description>Access Census data in PythonSince Census publicized its data access API to developers, many Python pacakges had been developed to take advantage of that. Currently, there is a very long list of Python packages that allow use to access census data via scripts.
census (work best with package us)censusdis (census discovery)cenpycensus-data-downloader (for ACS data)pygris (for tiger boundary files)Access Census data in RThere are also many packages in R that facilitate census data accsess.</description>
    </item>
    
    <item>
      <title>Python on Mac OS</title>
      <link>https://suncodeearth.github.io/blog/post/2024-06-09-python-on-mac-os/</link>
      <pubDate>Sun, 09 Jun 2024 00:00:00 +0000</pubDate>
      <author>sunsp.gis@gmail.com (Shipeng Sun)</author>
      <guid>https://suncodeearth.github.io/blog/post/2024-06-09-python-on-mac-os/</guid>
      <description>Set up Python on Mac OSMamba forge packageThe best solution so far is to use MiniForge release. The Mamba Forge combination is the most efficient one. Download and run the Shell (.sh) installation file in Mac terminal. Use mamba init zsh to initialize Python for the terminal. zsh is the default shell for Mac OS. If a different shell is used, just change the parameter in mamba init.</description>
    </item>
    
  </channel>
</rss>
